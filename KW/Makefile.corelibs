CPP=~/arc32/bin/arc-elf32-g++
CC=~/arc32/bin/arc-elf32-gcc

#CPPSRCS = $(wildcard *.cpp)
#CSRCS = $(wildcard *.c)
build.system.path = $(PWD)/system
CPPSRCS  = $(shell find cores/arduino -name *.cpp)
CPPSRCS += $(shell find libraries -name *.cpp)
CSRCS  = $(shell find cores/arduino -name *.c)
CSRCS += $(shell find libraries -name *.c)
CPPOBJS = $(CPPSRCS:.cpp=.o)
COBJS = $(CSRCS:.c=.o)
INCL = -I system/libarc32_edu/common \
	 -I variants/intel_edu_x \
	 -I system/libarc32_edu/drivers \
	 -I system/libarc32_edu/bootcode \
	 -I system/libarc32_edu/framework/include \
	 -I cores/arduino \
	 -I libraries/SPI \
	 -I libraries/SD/src \
	 -I libraries/CurieBle/src \
	 -I libraries/TFT/src \
	 -I libraries/CurieImu/src \
	 -I libraries/Ethernet/src \
	 -I libraries/Adafruit_Motor_Shield_V2_Library/utility \
	 -I libraries/Wire

#CFLAGS = $(INCL) \
#	 -D CONFIG_SOC_GPIO_32=1 -DCLOCK_SPEED=32
CFLAGS = -c $(INCL) -DARDUINO=100 -mARCv2EM -mav2em -mlittle-endian -g -Os -Wall \
         -fno-reorder-functions -fno-asynchronous-unwind-tables \
         -fno-omit-frame-pointer -fno-defer-pop -Wno-unused-but-set-variable \
         -Wno-main -ffreestanding -fno-stack-protector -mno-sdata \
         -ffunction-sections -fdata-sections -fsigned-char -MMD -D__ARDUINO_ARC__ \
         -D__CPU_ARC__ -DCLOCK_SPEED=32 -DCONFIG_SOC_GPIO_32 -DCONFIG_SOC_GPIO_AON \
         -DINFRA_MULTI_CPU_SUPPORT -DCFW_MULTI_CPU_SUPPORT -DHAS_SHARED_MEM \
          -I$(build.system.path)/libarc32_edu/common -I$(build.system.path)/libarc32_edu/drivers \
          -I$(build.system.path)/libarc32_edu/bootcode -I$(build.system.path)/libarc32_edu/framework/include

CPPFLAGS = $(CFLAGS) \
	 -fpermissive

CHECK = splint

all: main libarc32_edu

libarc32_edu:
	cd system/libarc32_edu/; make; cd -

main: $(CPPOBJS) $(COBJS)
	@echo $(CPPOBJS)
	@echo $(COBJS)
	@echo Done.
#$(CC) $(LD_FLAGS) -o $@ $^

%.o: %.cpp
	@echo "------"
	$(CPP) $(CPPFLAGS) -c -o $@ $<

%.o: %.c
	@echo "------"
	$(CC) $(CFLAGS) -c -o $@ $<

check: $(CPPSRCS)
	@echo "------"
	$(CHECK) $(INCL) $<

clean:
#rm -f $(CPPOBJS) $(COBJS)
	find -name "*.o" |xargs -i rm {}
	make -C system/libarc32_edu/ clean
